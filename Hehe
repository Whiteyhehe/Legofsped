local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Legend of Speed (test)", HidePremium = false})

local farmOrbEnabled = false
local autoRebirthEnabled = false
local orbSelected = "Yellow"
local selectedCity = "City"
local farmOrbInterval = 1.5
local trailOrPetName = ""
local speedValue = 1
local jumpPowerValue = 1
local orbCollectionLoopCount = 1000  -- Default loop count for farming orbs
local HoopsFarm = false  -- Boolean to control Hoops farming
local raceLoopActive = false  -- Flag to track race joining loop

local function giveTrailOrPet(trailOrPetName)
    if trailOrPetName and trailOrPetName ~= "" then
        local args = {
            [1] = game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild(trailOrPetName)
        }
        game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(unpack(args))
    else
        print("Please enter a valid Trail or Pet name.")
    end
end

local function startFarmOrb(orbSelected)
    if farmOrbEnabled then
        coroutine.wrap(function()
            while farmOrbEnabled do
                wait(farmOrbInterval)
                for j = 1, orbCollectionLoopCount do  -- Use the dynamic loop count
                    local orbName = orbSelected
                    if orbSelected ~= "Gem" then
                        orbName = orbSelected .. " Orb"
                    end
                    
                    local args = {
                        [1] = "collectOrb",
                        [2] = orbName,
                        [3] = selectedCity
                    }

                    game:GetService("ReplicatedStorage").rEvents.orbEvent:FireServer(unpack(args))
                end
            end
        end)()
    end
end

local function buyGlitchedTrailBoost()
    local args = {
        [1] = "upgradeUltimate",
        [2] = "x2 Trail Boosts"
    }
    game:GetService("ReplicatedStorage").rEvents.ultimatesRemote:InvokeServer(unpack(args))
end

local function startAutoRebirth()
    while autoRebirthEnabled do
        wait(0)
        local args = {
            [1] = "rebirthRequest"
        }
        game:GetService("ReplicatedStorage").rEvents.rebirthEvent:FireServer(unpack(args))
    end
end

local function autoChangeSpeed(speedValue)
    local args = {
        [1] = "changeSpeed",
        [2] = speedValue
    }
    game:GetService("ReplicatedStorage").rEvents.changeSpeedJumpRemote:InvokeServer(unpack(args))
end

local function autoChangeJumpPower(jumpPowerValue)
    local args = {
        [1] = "changeJump",
        [2] = jumpPowerValue
    }
    game:GetService("ReplicatedStorage").rEvents.changeSpeedJumpRemote:InvokeServer(unpack(args))
end

local Tab1 = Window:MakeTab({
    Name = "Trail / Pet Giver üåü",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

Tab1:AddTextbox({
    Name = "Enter Trail / Pet Name",
    Default = "Trail/Pet Name",
    TextDisappear = true,
    Callback = function(Value)
        trailOrPetName = Value
    end
})

-- Global variable to manage the loop status
local isGivingTrailOrPet = false

Tab1:AddToggle({
    Name = "Give Trail / Pet Toggle",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is on
            isGivingTrailOrPet = true
            coroutine.wrap(function()
                while isGivingTrailOrPet do
                    wait(0)  -- Wait for one frame
                    giveTrailOrPet(trailOrPetName)
                end
            end)()
        else
            -- Stop the loop when the toggle is off
            isGivingTrailOrPet = false
        end
    end
})

local Tab2 = Window:MakeTab({
    Name = "Farm Orb üíé",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

Tab2:AddDropdown({
    Name = "City Selector",
    Default = "City",
    Options = {"City", "Snow City", "Magma City", "Legends Highway", "Speed Jungle"},
    Callback = function(Value)
        selectedCity = Value
    end
})

Tab2:AddToggle({
    Name = "Farm Orb Toggle",
    Default = false,
    Callback = function(Value)
        farmOrbEnabled = Value
        if farmOrbEnabled then
            startFarmOrb(orbSelected)
        end
    end
})

Tab2:AddDropdown({
    Name = "Select Orb Type",
    Default = "Yellow",
    Options = {"Ethereal", "Yellow", "Red", "Orange", "Gem", "Infernal"},
    Callback = function(Value)
        orbSelected = Value
    end
})

Tab2:AddTextbox({
    Name = "Orb Collection Interval",
    Default = "1.5",
    TextDisappear = true,
    Callback = function(Value)
        farmOrbInterval = tonumber(Value) or 1.5
    end
})

Tab2:AddTextbox({
    Name = "Enter Orb Collection Loop Count",
    Default = "1000",  -- Default value is 1000
    TextDisappear = true,
    Callback = function(Value)
        orbCollectionLoopCount = tonumber(Value) or 1000  -- If the input is invalid, default to 1000
    end
})

local Tab3 = Window:MakeTab({
    Name = "Glitched Boost ‚ö°",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

Tab3:AddButton({
    Name = "Buy Glitched x2 Trail Boost",
    Callback = function()
        buyGlitchedTrailBoost()
    end
})

local Tab4 = Window:MakeTab({
    Name = "Auto Rebirth ‚ôªÔ∏è",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

Tab4:AddToggle({
    Name = "Auto Rebirth Toggle",
    Default = false,
    Callback = function(Value)
        autoRebirthEnabled = Value
        if autoRebirthEnabled then
            startAutoRebirth()
        end
    end
})

local Tab8 = Window:MakeTab({
    Name = "Teleport ‚ú®",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

Tab8:AddDropdown({
    Name = "Select Location",
    Default = "None",  -- Set default to "None"
    Options = {"None", "City", "Snow City", "Magma City", "Desert", "Legends Highway", "Speed Jungle"},
    Callback = function(Value)
        if Value == "None" then
            -- Do nothing or leave the player at their current location
            return
        elseif Value == "City" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-9683.54296875, 59.16645431518555, 3102.343505859375)
        elseif Value == "Snow City" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-9675.8984375, 59.16645431518555, 3781.609619140625)
        elseif Value == "Magma City" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-11051.4638671875, 217.12646484375, 4898.080078125)
        elseif Value == "Desert" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2512.346435546875, 14.927675247192383, 4357.5576171875)
        elseif Value == "Legends Highway" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-13098.7568359375, 217.12646484375, 5905.736328125)
        elseif Value == "Speed Jungle" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-15271.2841796875, 398.4812927246094, 5572.15576171875)
        end
    end
})

local TabHoopsFarm = Window:MakeTab({
    Name = "Hoops Farm üèÄ",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Hoops Farming Loop with no cooldown
spawn(function()
    while task.wait(0) do  -- Set task.wait(0) for no delay
        if HoopsFarm then
            pcall(function()
                for i, v in pairs(game:GetService("Workspace").Hoops:GetChildren()) do
                    v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                end
            end)
        end
    end
end)

-- Toggle for enabling/disabling Hoops farming
TabHoopsFarm:AddToggle({
    Name = "Hoops Farm Toggle",
    Default = false,
    Callback = function(Value)
        HoopsFarm = Value
        if HoopsFarm then
            -- Start the Hoops farming coroutine with no cooldown
            spawn(function()
                while task.wait(0) do  -- Task waits for 0 seconds, meaning no delay
                    if HoopsFarm then
                        pcall(function()
                            for i, v in pairs(game:GetService("Workspace").Hoops:GetChildren()) do
                                v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                            end
                        end)
                    end
                end
            end)
        end
    end
})

-- Create a new tab for Auto Race
local TabAutoRace = Window:MakeTab({
    Name = "Auto Race üèÅ",
    Icon = "rbxassetid://4483345998",  -- You can replace the icon with your preferred one
    PremiumOnly = false
})

-- Toggle for enabling/disabling Auto Race
TabAutoRace:AddToggle({
    Name = "Auto Join Race",
    Default = false,
    Callback = function(Value)
        if Value then
            raceLoopActive = true

            -- Start the loop for joining races and teleporting to finish lines
            coroutine.wrap(function()
                while raceLoopActive do
                    -- Fire the joinRace event
                    local args = {
                        [1] = "joinRace"  -- Send the "joinRace" request to the server
                    }
                    game:GetService("ReplicatedStorage").rEvents.raceEvent:FireServer(unpack(args))

                    -- Wait for a moment to ensure the race join process completes
                    wait(2)  -- Adjusted wait time after joining the race

                    -- Get the player's character
                    local player = game.Players.LocalPlayer
                    local character = player.Character or player.CharacterAdded:Wait()

                    -- Ensure the character is fully loaded and has a primary part
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        -- Teleport to different race finish parts
                        local finishParts = {
                            game.Workspace.raceMaps.Grassland.finishPart,
                            game.Workspace.raceMaps.Desert.finishPart,
                            game.Workspace.raceMaps.Magma.finishPart
                        }

                        -- Loop through all finish parts
                        for _, finishPart in pairs(finishParts) do
                            -- If the race loop is active, teleport to the finish part
                            if raceLoopActive then
                                -- Check if the finish part exists
                                if finishPart then
                                    character:SetPrimaryPartCFrame(finishPart.CFrame)
                                    wait(0.5)  -- Small delay between teleportations (optional)
                                end
                            end
                        end
                    else
                        -- Wait a bit for the character to load if it's not ready
                        wait(1)
                    end

                    -- Small wait before joining the race again (changed to 2 seconds)
                    wait(2)  -- Adjusted wait time before joining the race again
                end
            end)()
        else
            raceLoopActive = false
        end
    end
})

local Tab5 = Window:MakeTab({
    Name = "Auto Speed üí®",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

Tab5:AddButton({
    Name = "Change Speed",
    Callback = function()
        autoChangeSpeed(speedValue)
    end
})

local Tab6 = Window:MakeTab({
    Name = "Auto JumpPower ü¶ò",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

Tab6:AddTextbox({
    Name = "Enter Jump Power Value",
    Default = "1",
    TextDisappear = true,
    Callback = function(Value)
        jumpPowerValue = tonumber(Value) or 1
    end
})

Tab6:AddButton({
    Name = "Change JumpPower",
    Callback = function()
        autoChangeJumpPower(jumpPowerValue)
    end
})

local MiscTab = Window:MakeTab({
    Name = "Misc üí•",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false,
    BorderColor = Color3.fromRGB(128, 128, 128)
})

MiscTab:AddButton({
    Name = "Load Inf Yield",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Inf-yeild-New-Version-1836"))()
    end
})

MiscTab:AddButton({
    Name = "Load Nameless Admin",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Nameless-Admin-Official-15022"))()
    end
})

MiscTab:AddButton({
    Name = "Load Remote Spy",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Just-A-Script-Rewrite-12363"))()
    end
})

MiscTab:AddButton({
    Name = "Load Fly Mobile",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-FLY-GUI-V3-8031"))()
    end
})

local Tab7 = Window:MakeTab({
    Name = "Credits üìù",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

Tab7:AddLabel("Made by: Whitey_plays")
Tab7:AddLabel("Discord: lwclowny")

OrionLib:Init()


OrionLib:Init()
